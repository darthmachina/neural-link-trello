!function(n,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["neural-link-trello"]=t():n["neural-link-trello"]=t()}(this,(function(){return n={486:function(n,t){var e,o;void 0===(o="function"==typeof(e=function(n){"use strict";function t(){}return t.prototype.toString=function(){return"kotlin.Unit"},t.$metadata$={simpleName:"Unit",kind:"object",interfaces:[]},n.$crossModule$=n.$crossModule$||{},n.$crossModule$.toString=function(n){return null==n?"null":function(n){return t=n,!!Array.isArray(t)||ArrayBuffer.isView(n);var t}(n)?"[...]":n.toString()},n})?e.apply(t,[t]):e)||(n.exports=o)},32:function(n,t,e){var o,r,i;r=[t,e(486)],void 0===(i="function"==typeof(o=function(n,t){var o,r,i=t.$crossModule$.toString;function a(){o=this}function l(){return null==o&&new a,o}function c(){l()}return a.prototype.cardButtons=function(n){console.log("cardButton(), t: "+i(n))},a.$metadata$={simpleName:"Companion",kind:"object",interfaces:[]},c.$metadata$={simpleName:"NeuralLinkPowerUp",kind:"class",interfaces:[]},function(n){var t=n.neurallink||(n.neurallink={});t.NeuralLink=c,Object.defineProperty(t.NeuralLink,"Companion",{configurable:!0,get:l})}(n),r=e(32),console.log("nl created, calling initialize()",r),TrelloPowerUp.initialize({"card-buttons":function(n,t){return console.log("card-buttons capability"),[{icon:"/static/icon-dark.png",text:"Estimate Size",callback:function(n){console.log("callback nl",r),r.neurallink.NeuralLink.cardButtons(n)}}]}}),n})?o.apply(t,r):o)||(n.exports=i)}},t={},function e(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={exports:{}};return n[o].call(i.exports,i,i.exports,e),i.exports}(32);var n,t}));
//# sourceMappingURL=neural-link-trello.js.map